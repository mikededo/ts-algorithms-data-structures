/**
 * The `Plan` interface defines the different types
 * of plans that can be created depending of the user
 * bought plan
 */
export interface Plan {
  get planRate(): number;

  get planInfo(): PlanInfo;
}

/**
 * `Free`, `Family` and `Premium` are the plans that will
 * be generated by the factory method
 */
export class Free implements Plan {
  get planRate(): number {
    return 0.0;
  }

  get planInfo(): PlanInfo {
    return {
      maxConnections: 1,
      maxActive: 1,
      discount: 0,
    };
  }
}

export class Family implements Plan {
  get planRate(): number {
    return 10.0;
  }

  get planInfo(): PlanInfo {
    return {
      maxConnections: 5,
      maxActive: 5,
      discount: 0,
    };
  }
}

export class Premium implements Plan {
  get planRate(): number {
    return 15.0;
  }

  get planInfo(): PlanInfo {
    return {
      maxConnections: 'unlimited',
      maxActive: 'unlimited',
      discount: 10,
    };
  }
}

/**
 * `PlanFactory` will return an instance of the
 * selected plan, depending of the user input
 */
export class PlanFactory {
  static generatePlan(plan: 'FREE' | 'FAMILY' | 'PREMIUM'): Plan {
    const plans = {
      FREE: () => new Free(),
      FAMILY: () => new Family(),
      PREMIUM: () => new Premium(),
    };

    return plans[plan]();
  }
}

export type PlanInfo = {
  maxConnections: 1 | 5 | 'unlimited';
  maxActive: 1 | 5 | 'unlimited';
  discount: 0 | 10;
};
